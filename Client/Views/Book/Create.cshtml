@{
    ViewData["Title"] = "Create Book";
}

<head>
    <link rel="stylesheet" href="~/css/book.css" />
    <link rel="stylesheet" href="~/css/create.css" />
</head>
<body>
    <div class="create-book-container">
        <h1>Add New Book</h1>

        <form id="create-book-form" method="post" onsubmit="return submitForm(event)">
            <div class="form-group">
                <label for="title">Book Title</label>
                <input type="text" id="title" name="title" required />
            </div>

            <div class="form-group">
                <label for="description">Description</label>
                <textarea id="description" name="description" required></textarea>
            </div>

            <div class="form-group">
                <label for="price">Price</label>
                <input type="number" id="price" name="price" step="0.01" required />
            </div>

            <div class="form-group">
                <label for="stock">Stock</label>
                <input type="number" id="stock" name="stock" required />
            </div>

            <div class="form-group">
                <label for="image">Product Images</label>
                <input type="text" id="image" name="image" required />
            </div>

            <div class="form-group">
                <label for="categoryId">Category</label>
                <select id="categoryId" name="categoryId" required>
                    <option value="">Select a category</option>
                    <!-- Categories will be populated here -->
                </select>
            </div>

            <button type="submit" class="submit-button">Add Product</button>
            <a href="@Url.Action("Index", "Book")" class="cancel-button">Cancel</a>
        </form>
    </div>

    <script>
        async function fetchCategories() {
            const response = await fetch('https://localhost:7079/odata/Categories');
            const data = await response.json();
            const categorySelect = document.getElementById('categoryId');

            data.value.forEach(category => {
                const option = document.createElement('option');
                option.value = category.CategoryId; // Assuming CategoryId is a Guid
                option.textContent = category.CategoryName;
                categorySelect.appendChild(option);
            });
        }

        async function submitForm(event) {
            event.preventDefault(); // Prevent the default form submission
            
            const formData = new FormData(event.target);
            const data = {
                title: formData.get('title'),
                description: formData.get('description'),
                price: parseFloat(formData.get('price')),
                image: formData.get('image'),
                stock: parseInt(formData.get('stock')),
                categoryId: formData.get('categoryId')
            };

            const response = await fetch('https://localhost:7079/odata/Books', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data)
            });

            if (response.ok) {
                alert('Book added successfully!');
                window.location.href = '@Url.Action("Index", "Book")'; // Redirect to the books list
            } else {
                alert('Error adding book. Please try again.');
            }
        }

        document.addEventListener('DOMContentLoaded', fetchCategories); // Fetch categories on page load
    </script>
</body>