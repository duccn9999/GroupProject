@{
    ViewData["Title"] = "Create User";
}

<head>
    <link rel="stylesheet" href="~/css/book.css" />
    <link rel="stylesheet" href="~/css/create.css" />
</head>
<body>
    <div class="create-book-container">
        <h1>Add New User</h1>

        <form id="create-book-form" method="post" onsubmit="return submitForm(event)">
            <div class="form-group">
                <label for="title">User Name</label>
                <input type="text" id="userName" name="userName" required />
            </div>
            <div class="form-group">
                <label for="title">Password</label>
                <input type="password" id="password" name="password" required />
            </div>

            <button type="submit" class="submit-button">Add User</button>
            <a href="@Url.Action("Index", "User")" class="cancel-button">Cancel</a>
        </form>
    </div>

    <script>
    token = sessionStorage.getItem('token'); // Assuming you store the token in localStorage

    async function checkDuplicateUser(userName) {
        const response = await fetch(`https://localhost:7079/odata/Users?$filter=userName eq '${userName}'`, {
            method: 'GET',
            headers: {
                'Authorization': `Bearer ${token}`
            }
        });
        
        if (response.ok) {
            const data = await response.json();
            return data.value.length > 0; // Returns true if user exists
        }
        return false;
    }

    async function submitForm(event) {
        event.preventDefault(); // Prevent the default form submission
        
        const formData = new FormData(event.target);
        const userName = formData.get('userName');
        const password = formData.get('password');
        
        if (await checkDuplicateUser(userName)) {
            alert('User already exists. Please choose another username.');
            return;
        }

        const data = { userName, password };

        const response = await fetch('https://localhost:7079/odata/Users', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${token}`
            },
            body: JSON.stringify(data)
        });

        if (response.ok) {
            alert('User added successfully!');
            window.location.href = '@Url.Action("Index", "User")';
        } else {
            alert('Error adding user. Please try again.');
        }
    }
</script>

</body>