@{
    ViewData["Title"] = "Edit User";
}

<head>
    <link rel="stylesheet" href="~/css/book.css" />
    <link rel="stylesheet" href="~/css/create.css" />
</head>
<body>
    <div class="create-book-container">
        <h1>Edit User</h1>

        <form id="edit-book-form" method="post" onsubmit="return submitForm(event)">
            <input type="hidden" id="bookId" name="bookId" />
            <div id="rolesContainer">
            </div>
            <button type="submit" class="submit-button">Assign roles for user</button>
            <a href="@Url.Action("Index", "User")" class="cancel-button">Cancel</a>
        </form>
    </div>

<script>
    async function fetchRoles() {
        const token = sessionStorage.getItem('token');
        const urlParams = new URLSearchParams(window.location.search);
        const userId = urlParams.get('id');


        const response = await $.ajax({
            url: 'https://localhost:7079/odata/Roles?$Select=RoleId,RoleName',
            method: 'GET',
            headers: { 'Authorization': `Bearer ${token}` }
        });

        const rolesOfUser = await $.ajax({
            url: `https://localhost:7079/api/UserRoles/GetRolesOfUser/${userId}`,
            method: 'GET',
            headers: { 'Authorization': `Bearer ${token}` }
        });
        const userRoleIds = new Set(rolesOfUser); // Convert array to Set


        response.value.forEach(role => {
            const formGroup = document.createElement("div");
            formGroup.classList.add("form-check");

            const checkbox = document.createElement("input");
            checkbox.type = "checkbox";
            checkbox.id = `role-${role.RoleId}`;
            checkbox.name = "roles";
            checkbox.value = role.RoleId;
            checkbox.classList.add("form-check-input");
            checkbox.checked = userRoleIds.has(role.RoleId);

            const label = document.createElement("label");
            label.setAttribute("for", `role-${role.RoleId}`);
            label.textContent = role.RoleName;
            label.classList.add("form-check-label");

            formGroup.appendChild(checkbox);
            formGroup.appendChild(label);
            rolesContainer.appendChild(formGroup);
        });
    }

    async function submitForm(event) {
        event.preventDefault();
        const urlParams = new URLSearchParams(window.location.search);
        const userId = urlParams.get('id');
        const formData = new FormData(event.target);
        const data = Array.from(document.querySelectorAll("input[name='roles']:checked"))
                           .map(checkbox => checkbox.value);

        const response = await fetch(`https://localhost:7079/api/UserRoles/UpdateRolesOfUser/${userId}`, {
            method: 'PUT',
            headers: {
                "Authorization": `Bearer ${token}`,
                "Content-Type": "application/json"
            },
            body: JSON.stringify(data)
        });

        if (response.ok) {
            alert('User updated successfully!');
            window.location.href = '@Url.Action("Index", "User")';
        } else {
            alert('Error updating user. Please try again.');
        }
    }

    document.addEventListener('DOMContentLoaded', async () => {
        const bookId = new URLSearchParams(window.location.search).get('id');
        console.log(bookId);
        await fetchRoles();
    });
</script>

</body>